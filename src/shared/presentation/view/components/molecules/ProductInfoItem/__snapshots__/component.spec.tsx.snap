// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductInfoItem should render the component correctly, displaying its elements 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c1 {
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.25rem;
  background-color: #754A56;
  color: #FFFFFF;
}

.c1:hover {
  background-color: #845864;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 0.5rem;
  border-bottom: 1px solid #E6EAEA;
  gap: 0.25rem;
}

.c0 .slug {
  color: #506C6D;
}

.c0 .price {
  color: #3D879D;
}

.c0 a {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

@media (min-width:768px) {
  .c0 {
    display: grid;
    grid-template-areas: 'title button' 'description button' 'slug price';
    grid-template-columns: 1fr 10rem;
  }

  .c0 h4 {
    grid-area: title;
  }

  .c0 .description {
    grid-area: description;
  }

  .c0 .slug {
    grid-area: slug;
  }

  .c0 .price {
    grid-area: price;
    justify-self: end;
  }

  .c0 a {
    grid-area: button;
    justify-self: end;
  }
}

<body>
    <div>
      <li
        class="c0"
      >
        <h4>
          Product 1
        </h4>
        <p
          class="description"
        >
          Description 1 of the initial product named 1
        </p>
        <p
          class="slug"
        >
          Slug: 
          <em>
            product-1
          </em>
        </p>
        <strong
          class="price"
        >
          Price: $
          100.99
        </strong>
        <a
          class="c1"
          href="/products/edit/dshf9sdghsd"
        >
          <svg
            data-testid="button-Icon"
            fill="currentColor"
            height="1em"
            stroke="currentColor"
            stroke-width="0"
            viewBox="0 0 576 512"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
            />
          </svg>
          Edit
        </a>
      </li>
    </div>
  </body>,
  "container": .c1 {
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.25rem;
  background-color: #754A56;
  color: #FFFFFF;
}

.c1:hover {
  background-color: #845864;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 0.5rem;
  border-bottom: 1px solid #E6EAEA;
  gap: 0.25rem;
}

.c0 .slug {
  color: #506C6D;
}

.c0 .price {
  color: #3D879D;
}

.c0 a {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

@media (min-width:768px) {
  .c0 {
    display: grid;
    grid-template-areas: 'title button' 'description button' 'slug price';
    grid-template-columns: 1fr 10rem;
  }

  .c0 h4 {
    grid-area: title;
  }

  .c0 .description {
    grid-area: description;
  }

  .c0 .slug {
    grid-area: slug;
  }

  .c0 .price {
    grid-area: price;
    justify-self: end;
  }

  .c0 a {
    grid-area: button;
    justify-self: end;
  }
}

<div>
    <li
      class="c0"
    >
      <h4>
        Product 1
      </h4>
      <p
        class="description"
      >
        Description 1 of the initial product named 1
      </p>
      <p
        class="slug"
      >
        Slug: 
        <em>
          product-1
        </em>
      </p>
      <strong
        class="price"
      >
        Price: $
        100.99
      </strong>
      <a
        class="c1"
        href="/products/edit/dshf9sdghsd"
      >
        <svg
          data-testid="button-Icon"
          fill="currentColor"
          height="1em"
          stroke="currentColor"
          stroke-width="0"
          viewBox="0 0 576 512"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z"
          />
        </svg>
        Edit
      </a>
    </li>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
