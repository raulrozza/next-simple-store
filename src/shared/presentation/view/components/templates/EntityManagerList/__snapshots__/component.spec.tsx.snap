// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EntityManagerList should display the empty text when there are no items 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c3 {
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.25rem;
  color: #1E4243;
}

.c3:hover {
  background-color: #CDD5D5;
}

.c6 {
  background-color: #FFFFFF;
  border-radius: 1rem;
}

.c4 {
  margin-top: 0.5rem;
}

.c5 {
  margin-top: 0.25rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c1 {
  width: 100%;
  max-width: 50rem;
  margin: 1rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 0.25rem;
}

.c7 {
  overflow: hidden;
}

<body>
    <div>
      <section
        class="c0"
      >
        <main
          class="c1"
        >
          <div
            class="c2"
          >
            <a
              class="c3"
              href="/add"
            >
              Add
            </a>
          </div>
          <div
            class="c4"
            size="2"
          />
          <h1>
            Title
          </h1>
          <div
            class="c5"
            size="1"
          />
          <p>
            There are no items yet.
          </p>
          <ul
            class="c6 c7"
          />
        </main>
      </section>
    </div>
  </body>,
  "container": .c3 {
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.25rem;
  color: #1E4243;
}

.c3:hover {
  background-color: #CDD5D5;
}

.c6 {
  background-color: #FFFFFF;
  border-radius: 1rem;
}

.c4 {
  margin-top: 0.5rem;
}

.c5 {
  margin-top: 0.25rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c1 {
  width: 100%;
  max-width: 50rem;
  margin: 1rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 0.25rem;
}

.c7 {
  overflow: hidden;
}

<div>
    <section
      class="c0"
    >
      <main
        class="c1"
      >
        <div
          class="c2"
        >
          <a
            class="c3"
            href="/add"
          >
            Add
          </a>
        </div>
        <div
          class="c4"
          size="2"
        />
        <h1>
          Title
        </h1>
        <div
          class="c5"
          size="1"
        />
        <p>
          There are no items yet.
        </p>
        <ul
          class="c6 c7"
        />
      </main>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`EntityManagerList should render the component correctly, displaying all its elements and the item list 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c3 {
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.25rem;
  color: #1E4243;
}

.c3:hover {
  background-color: #CDD5D5;
}

.c6 {
  background-color: #FFFFFF;
  border-radius: 1rem;
}

.c4 {
  margin-top: 0.5rem;
}

.c5 {
  margin-top: 0.25rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c1 {
  width: 100%;
  max-width: 50rem;
  margin: 1rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 0.25rem;
}

.c7 {
  overflow: hidden;
}

<body>
    <div>
      <section
        class="c0"
      >
        <main
          class="c1"
        >
          <div
            class="c2"
          >
            <a
              class="c3"
              href="/add"
            >
              Add
            </a>
          </div>
          <div
            class="c4"
            size="2"
          />
          <h1>
            Title
          </h1>
          <div
            class="c5"
            size="1"
          />
          <ul
            class="c6 c7"
          >
            <div>
              Slogan 1
            </div>
            <div>
              Slogan 2
            </div>
          </ul>
        </main>
      </section>
    </div>
  </body>,
  "container": .c3 {
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.25rem;
  color: #1E4243;
}

.c3:hover {
  background-color: #CDD5D5;
}

.c6 {
  background-color: #FFFFFF;
  border-radius: 1rem;
}

.c4 {
  margin-top: 0.5rem;
}

.c5 {
  margin-top: 0.25rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c1 {
  width: 100%;
  max-width: 50rem;
  margin: 1rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 0.25rem;
}

.c7 {
  overflow: hidden;
}

<div>
    <section
      class="c0"
    >
      <main
        class="c1"
      >
        <div
          class="c2"
        >
          <a
            class="c3"
            href="/add"
          >
            Add
          </a>
        </div>
        <div
          class="c4"
          size="2"
        />
        <h1>
          Title
        </h1>
        <div
          class="c5"
          size="1"
        />
        <ul
          class="c6 c7"
        >
          <div>
            Slogan 1
          </div>
          <div>
            Slogan 2
          </div>
        </ul>
      </main>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
