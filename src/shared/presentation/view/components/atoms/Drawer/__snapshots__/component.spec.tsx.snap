// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Drawer should render the component hiding the content 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  display: none;
}

.c1 {
  position: fixed;
  visibility: hidden;
  background: white;
  -webkit-transition: all;
  transition: all;
  box-shadow: 0 0 10px 5px #00000029;
  z-index: 101;
  -webkit-transition-duration: 500ms;
  transition-duration: 500ms;
  top: 0;
  left: 0;
  -webkit-transform: translate3d(-100%,0,0);
  -ms-transform: translate3d(-100%,0,0);
  transform: translate3d(-100%,0,0);
  width: 200px;
  height: 100vh;
}

.c2 {
  display: none;
  height: 100vh;
  left: 0;
  position: fixed;
  top: 0;
  width: 100%;
  background-color: #000;
  opacity: 0.4;
  z-index: 100;
}

<body>
    <div>
      <div>
        <input
          class="c0"
          id="drawer-checkbox"
          type="checkbox"
        />
        <nav
          class="c1"
          role="navigation"
        >
          Content
        </nav>
        <label
          class="c2"
          data-testid="drawer-Overlay"
          for="drawer-checkbox"
        />
      </div>
    </div>
  </body>,
  "container": .c0 {
  display: none;
}

.c1 {
  position: fixed;
  visibility: hidden;
  background: white;
  -webkit-transition: all;
  transition: all;
  box-shadow: 0 0 10px 5px #00000029;
  z-index: 101;
  -webkit-transition-duration: 500ms;
  transition-duration: 500ms;
  top: 0;
  left: 0;
  -webkit-transform: translate3d(-100%,0,0);
  -ms-transform: translate3d(-100%,0,0);
  transform: translate3d(-100%,0,0);
  width: 200px;
  height: 100vh;
}

.c2 {
  display: none;
  height: 100vh;
  left: 0;
  position: fixed;
  top: 0;
  width: 100%;
  background-color: #000;
  opacity: 0.4;
  z-index: 100;
}

<div>
    <div>
      <input
        class="c0"
        id="drawer-checkbox"
        type="checkbox"
      />
      <nav
        class="c1"
        role="navigation"
      >
        Content
      </nav>
      <label
        class="c2"
        data-testid="drawer-Overlay"
        for="drawer-checkbox"
      />
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Drawer should render the component showing the content if the open prop is true 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  display: none;
}

.c1 {
  position: fixed;
  visibility: hidden;
  background: white;
  -webkit-transition: all;
  transition: all;
  box-shadow: 0 0 10px 5px #00000029;
  z-index: 101;
  -webkit-transition-duration: 500ms;
  transition-duration: 500ms;
  top: 0;
  left: 0;
  -webkit-transform: translate3d(-100%,0,0);
  -ms-transform: translate3d(-100%,0,0);
  transform: translate3d(-100%,0,0);
  width: 200px;
  height: 100vh;
  visibility: visible;
  -webkit-transform: translate3d(0,0,0) !important;
  -ms-transform: translate3d(0,0,0) !important;
  transform: translate3d(0,0,0) !important;
}

.c2 {
  display: none;
  height: 100vh;
  left: 0;
  position: fixed;
  top: 0;
  width: 100%;
  background-color: #000;
  opacity: 0.4;
  z-index: 100;
  display: block;
}

<body>
    <div>
      <div>
        <input
          checked=""
          class="c0"
          id="drawer-checkbox"
          type="checkbox"
        />
        <nav
          class="c1"
          role="navigation"
        >
          Content
        </nav>
        <label
          class="c2"
          data-testid="drawer-Overlay"
          for="drawer-checkbox"
        />
      </div>
    </div>
  </body>,
  "container": .c0 {
  display: none;
}

.c1 {
  position: fixed;
  visibility: hidden;
  background: white;
  -webkit-transition: all;
  transition: all;
  box-shadow: 0 0 10px 5px #00000029;
  z-index: 101;
  -webkit-transition-duration: 500ms;
  transition-duration: 500ms;
  top: 0;
  left: 0;
  -webkit-transform: translate3d(-100%,0,0);
  -ms-transform: translate3d(-100%,0,0);
  transform: translate3d(-100%,0,0);
  width: 200px;
  height: 100vh;
  visibility: visible;
  -webkit-transform: translate3d(0,0,0) !important;
  -ms-transform: translate3d(0,0,0) !important;
  transform: translate3d(0,0,0) !important;
}

.c2 {
  display: none;
  height: 100vh;
  left: 0;
  position: fixed;
  top: 0;
  width: 100%;
  background-color: #000;
  opacity: 0.4;
  z-index: 100;
  display: block;
}

<div>
    <div>
      <input
        checked=""
        class="c0"
        id="drawer-checkbox"
        type="checkbox"
      />
      <nav
        class="c1"
        role="navigation"
      >
        Content
      </nav>
      <label
        class="c2"
        data-testid="drawer-Overlay"
        for="drawer-checkbox"
      />
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
